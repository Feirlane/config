#This file goes in $HOME/.bashrc

CONFDIR="$HOME/config"

function showColors {
for code in $(seq -f "%03g" 0 7); do
    echo -en "\e[48;5;${code}m$code ";
done
echo ""
for code in $(seq -f "%03g" 8 15); do
    echo -en "\e[48;5;${code}m$code ";
done
echo -e "\n"
for code in $(seq -f "%03g" 16 231); do
    echo -en "\e[48;5;${code}m$code ";
    if ! (((10#$code - 15) % 6)); then
        echo -en "\e[0m ";
    fi;
    if ! (((10#$code - 15) % 36)); then
        echo -e "\e[0m";
    fi;
done;
echo ""
for code in $(seq -f "%03g" 232 255); do
    echo -en "\e[48;5;${code}m$code ";
done
echo -e "\e[0m";
}

function printFic {

gr="\e[0;36m" # blueish-green
wh="\e[0;1m" # white
n="\e[00m" # disable colors

echo -e "$gr
###################
###$wh***$gr#############
##$wh*$gr###$wh*$gr##$wh*$gr#########
##$wh*$gr################
##$wh*$gr######$wh*$gr###$wh****$gr##
#$wh****$gr####$wh*$gr##$wh*$gr####$wh*$gr#
##$wh*$gr######$wh*$gr##$wh*$gr######
##$wh*$gr######$wh*$gr##$wh*$gr######
##$wh*$gr######$wh*$gr##$wh*$gr####$wh*$gr#
##$wh*$gr######$wh*$gr###$wh****$gr##
$gr###################
$n"
}

function printCat {
ye="\e[1;33m" # yellow
dg="\e[1;30m" # dark gray
lg="\e[0;37m" # light gray
br="\e[0;33m"  # brown
n="\e[00m" # disable coloring
#        echo ' /\_/\'
#        echo '( o.o )'
#        echo ' > ^ <'
echo -e "
             $ye*$n     ,MMM"$dg"8&&&.$n            $ye*$n
                  MMMM"$dg"88&&&&&$n    $ye.$n
                 MMMM"$dg"88&&&&&&&$n
     $ye*$n           MMM"$dg"88&&&&&&&&$n
                 MMM"$dg"88&&&&&&&&$n
                 'MMM"$dg"88&&&&&&'$n
                   'MMM"$dg"8&&&'$n      $ye*$n
$lg          |\___/|
$lg          )     (             $ye.$n              $ye'$n
$lg         =\     /=
$lg           )===(       $ye*$n
$lg          /     \\
$lg          |     |
$lg         /       \\
$lg         \       /
$dg  _/\_/\_/$lg\__  _/"$dg"_/\_/\_/\_/\_/\_/\_/\_/\_/\_
$dg  |  |  |  |$lg( ($dg  |  |  |  |  |  |  |  |  |  |
$dg  |  |  |  | $lg) )$dg |  |  |  |  |  |  |  |  |  |
$dg  |  |  |  |$lg(_($dg  |  |  |  |  |  |  |  |  |  |
$dg  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |
$dg  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |"

}

function ise {
    . /opt/Xilinx/13.3/ISE_DS/settings64.sh;
    LD_PRELOAD=$HOME/.Xilinx/myso.so:/opt/Xilinx/13.3/ISE_DS/ISE/lib/lin64/libXst_LogicOpt.so /opt/Xilinx/13.3/ISE_DS/ISE/bin/lin64/ise
}

# Check for an interactive session
[ -z "$PS1" ] && return

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
tput sgr0 # reset colors
bold=$(tput bold)
reset=$(tput sgr0)
# Solarized colors
# (https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized#the-values)
brblack=$(tput setaf 234)
black=$(tput setaf 0)
brgreen=$(tput setaf 76)
bryellow=$(tput setaf 214)
brblue=$(tput setaf 69)
brcyan=$(tput setaf 73)
white=$(tput setaf 254)
brwhite=$(tput setaf 15)
yellow=$(tput setaf 172)
brred=$(tput setaf 196)
red=$(tput setaf 160)
magenta=$(tput setaf 125)
brmagenta=$(tput setaf 161)
blue=$(tput setaf 33)
cyan=$(tput setaf 37)
green=$(tput setaf 64)

orange=$(tput setaf 202)
purple=$(tput setaf 125)

else
bold=""
reset="\e[0m"
black="\e[1;30m"
blue="\e[1;34m"
cyan="\e[1;36m"
green="\e[1;32m"
orange="\e[1;33m"
purple="\e[1;35m"
red="\e[1;31m"
white="\e[1;37m"
yellow="\e[1;33m"
fi

PS1="\[$bold$brgreen\]\u\[$bold$blue\]@\[$bold$brgreen\]\h \[$bold$blue\]\W\[$bold$brgreen\] \$\[$reset\] "

#PS1='\[\e[1;32m\]\u\[\e[m\]\[\e[1;34m\]@\[\e[m\]\[\e[1;32m\]\h\[\e[m\] \[\e[1;34m\]\W\[\e[m\]\[\e[1;32m\]\$\[\e[m\] '


export EDITOR=vim
export VISUAL=vim
export TERM=screen-256color

# Bash History improvements, thanks to /u/JonathanMcClare !
# Don't put duplicate lines in the history. See bash(1) for more options.
# ignoredups - causes lines matching the previous history entry to not be
#     saved
# ignorespace - lines which begin with a space character are not saved in the
#     history list
# ignoreboth - shorthand for ignorespace and ignoredups
# erasedups - causes all previous lines matching the current line to be
#     removed from the history list before that line is saved
export HISTCONTROL=ignoreboth:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# Coloured ManPages
# 0 black 1 red 2 green 3 yellow 4 blue 5 magenta 6 cyan 7 gray
export LESS_TERMCAP_mb=$(tput bold; tput setaf 3)
export LESS_TERMCAP_md=$(tput bold; tput setaf 6)
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 7; tput setab 0)
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 3)
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)

alias ls='ls --color=auto'
alias ll='ls -lish'
alias emacs='emacs -nw'
alias sudo='sudo -E'
export PATH=$PATH:.


# Start gpg agent

# Start the gpg-agent if not already running
if ! pgrep -x -u "${USER}" gpg-agent >/dev/null 2>&1; then
gpg-connect-agent /bye >/dev/null 2>&1
fi

# Set SSH to use gpg-agent
unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
export SSH_AUTH_SOCK="${HOME}/.gnupg/S.gpg-agent.ssh"
fi

# Set GPG TTY
GPG_TTY=$(tty)
export GPG_TTY

# Refresh gpg-agent tty in case user switches into an X session
gpg-connect-agent updatestartuptty /bye >/dev/null

#Specific configuration depending on the machine i'm logging in

HNAME=`echo "$HOSTNAME" | tr "[:upper:]" "[:lower:]"`
case $HNAME in
    *neko*)
        alias winsteam="cd \"$HOME/.wine_steam/drive_c/Program Files (x86)/Steam\"; export WINEPREFIX=/home/feirlane/.wine_steam/; export WINEARCH=win32; export PS1='(steam)$PS1'"
        alias y='yaourt'
        alias matlab='/opt/matlab/R2011a/bin/matlab'
        alias radio="$HOME/work/radio/radio.py"
        alias ise=ise

        case $HNAME in
            *nekopi*)
                source $HOME/config/bash/nekopi.bashrc
                ;;
            *nekodroid*)
                source $HOME/config/bash/nekodroid.bashrc
                ;;
            *)
                printCat
                ;;
        esac
        ;;
    *)
        case $USER in
            *marcos.lopez*)
                printFic
                PATH="$PATH:$HOME/.fakeroot/bin:$HOME/.fakeroot/usr/bin"
                export IS_HOME=$HOME/SoftwareIS
                # J2SE.
                export JAVA_HOME=/opt/POJOyWS-1213/jdk1.7.0_05
                # For convenience.
                PATH=$JAVA_HOME/bin:$PATH
                # Maven.
                MAVEN_HOME=/opt/POJOyWS-1213/apache-maven-3.0.4
                PATH=$MAVEN_HOME/bin:$PATH
                export MAVEN_OPTS="-Xms512m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m"
                # MySQL.
                MYSQL_HOME=/opt/POJOyWS-1213/mysql-5.5.25a-linux2.6-i686
                PATH=$MYSQL_HOME/bin:$PATH
                # Tomcat.
                export CATALINA_OPTS=$MAVEN_OPTS
                # Eclipse.
                PATH=$IS_HOME/eclipse:$PATH
                ;;
            *) echo "Nothin to do"
                ;;
        esac
        ;;
esac

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

if [ -e $HOME/config/dircolors/dircolors.256dark ]; then
    eval $(dircolors $HOME/config/dircolors/dircolors.256dark)
fi

if [ -e $CONFDIR/mc/solarized.ini ]; then
    export MC_SKIN=$CONFDIR/mc/solarized.ini
fi
