#This file goes in $HOME/.bashrc

# Color definitions
# Solarized colors
# (https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized#the-values)
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null
then
	tput sgr0 # reset colors
	reset=$(tput sgr0)
	bold=$(tput bold)

	black=$(tput setaf 0)
	brblack=$(tput setaf 234)

	gray=$(tput setaf 240)
	brgray=$(tput setaf 248)

	white=$(tput setaf 254)
	brwhite=$(tput setaf 15)

	red=$(tput setaf 160)
	brred=$(tput setaf 196)

	orange=$(tput setaf 202)

	yellow=$(tput setaf 172)
	bryellow=$(tput setaf 214)

	green=$(tput setaf 64)
	brgreen=$(tput setaf 76)

	cyan=$(tput setaf 37)
	brcyan=$(tput setaf 73)

	blue=$(tput setaf 33)
	brblue=$(tput setaf 69)

	purple=$(tput setaf 125)

	magenta=$(tput setaf 125)
	brmagenta=$(tput setaf 161)

else
	reset="\e[0m"
	bold="\e[1m"

	black="\e[38;5;0m"
	brblack="\e[38;5;234m"

	gray="\e[38;5;240m"
	brgray="\e[38;5;248m"

	white="\e[38;5;254m"
	brwhite="\e[38;5;15m"

	brred="\e[38;5;196m"
	red="\e[38;5;160m"

	orange="\e[38;5;202m"

	yellow="\e[38;5;172m"
	bryellow="\e[38;5;220m"

	green="\e[38;5;64m"
	brgreen="\e[38;5;76m"

	cyan="\e[38;5;37m"
	brcyan="\e[38;5;73m"

	blue="\e[38;5;33m"
	brblue="\e[38;5;69m"

	purple="\e[38;5;125m"

	magenta="\e[38;5;125m"
	brmagenta="\e[38;5;161m"

fi

CONFDIR="$HOME/config"

function showColors {
for code in $(seq -f "%03g" 0 7); do
    echo -en "\e[48;5;${code}m$code ";
done
echo ""
for code in $(seq -f "%03g" 8 15); do
    echo -en "\e[48;5;${code}m$code ";
done
echo -e "\n"
for code in $(seq -f "%03g" 16 231); do
    echo -en "\e[48;5;${code}m$code ";
    if ! (((10#$code - 15) % 6)); then
        echo -en "\e[0m ";
    fi;
    if ! (((10#$code - 15) % 36)); then
        echo -e "\e[0m";
    fi;
done;
echo ""
for code in $(seq -f "%03g" 232 255); do
    echo -en "\e[48;5;${code}m$code ";
done
echo -e "\e[0m";
}

function printCat {
#        echo ' /\_/\'
#        echo '( o.o )'
#        echo ' > ^ <'
echo -e "
             $bryellow*$reset     ,MMM"$gray"8&&&.$reset            $bryellow*$reset
                  MMMM"$gray"88&&&&&$reset    $bryellow.$reset
                 MMMM"$gray"88&&&&&&&$reset
     $bryellow*$reset           MMM"$gray"88&&&&&&&&$reset
                 MMM"$gray"88&&&&&&&&$reset
                 'MMM"$gray"88&&&&&&'$reset
                   'MMM"$gray"8&&&'$reset      $bryellow*$reset
$brgray          |\___/|
$brgray          )     (             $bryellow.$reset              $bryellow'$reset
$brgray         =\     /=
$brgray           )===(       $bryellow*$reset
$brgray          /     \\
$brgray          |     |
$brgray         /       \\
$brgray         \       /
$gray  _/\_/\_/$brgray\__  _/"$gray"_/\_/\_/\_/\_/\_/\_/\_/\_/\_
$gray  |  |  |  |$brgray( ($gray  |  |  |  |  |  |  |  |  |  |
$gray  |  |  |  | $brgray) )$gray |  |  |  |  |  |  |  |  |  |
$gray  |  |  |  |$brgray(_($gray  |  |  |  |  |  |  |  |  |  |
$gray  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |
$gray  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |"

}

function pacclean () {
	for i in "$HOME/.cache/pacaur/*"
	do
		git --git-dir="${i}/.git" --work-tree="${i}" clean -xffd
	done
}


# Check for an interactive session
[ -z "$PS1" ] && return

PS1_USERCOLOR="$bold$brgreen"
PS1_ATCOLOR="$bold$blue"
PS1_HOSTCOLOR="$bold$brgreen"
PS1_PATHCOLOR="$bold$blue"
PS1_DOLLARCOLOR="$bold$brgreen"


export EDITOR=vim
export VISUAL=vim

# Bash History improvements, thanks to /u/JonathanMcClare !
# Don't put duplicate lines in the history. See bash(1) for more options.
# ignoredups - causes lines matching the previous history entry to not be
#     saved
# ignorespace - lines which begin with a space character are not saved in the
#     history list
# ignoreboth - shorthand for ignorespace and ignoredups
# erasedups - causes all previous lines matching the current line to be
#     removed from the history list before that line is saved
export HISTCONTROL=ignoreboth:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# Coloured ManPages
# 0 black 1 red 2 green 3 yellow 4 blue 5 magenta 6 cyan 7 gray
export LESS_TERMCAP_mb=$(tput bold; tput setaf 3)
export LESS_TERMCAP_md=$(tput bold; tput setaf 6)
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 7; tput setab 0)
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 3)
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)

alias ls='ls --color=auto'
alias ll='ls -lish'
alias sudo='sudo -E'

# Start gpg agent

# Start the gpg-agent if not already running
if ! pgrep -x -u "${USER}" gpg-agent >/dev/null 2>&1; then
gpg-connect-agent /bye >/dev/null 2>&1
fi

# Set SSH to use gpg-agent
unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
export SSH_AUTH_SOCK="${HOME}/.gnupg/S.gpg-agent.ssh"
fi

# Set GPG TTY
GPG_TTY=$(tty)
export GPG_TTY

# Refresh gpg-agent tty in case user switches into an X session
gpg-connect-agent updatestartuptty /bye >/dev/null

#Specific configuration depending on the machine i'm logging in

function winsteam {
    WINEPREFIX="$HOME/.local/share/wineprefixes/steam";
    export WINEARCH=win32
    export WINEPREFIX=$WINEPREFIX
    export PS='(stean)'${PS1}
    cd "${WINEPREFIX}/drive_c/Program Files/Steam"
    wine Steam.exe
}

HNAME=`echo "$HOSTNAME" | tr "[:upper:]" "[:lower:]"`
case $HNAME in
    *neko*)
        printCat
        case $HNAME in
            *koneko*)
                PS1_HOSTCOLOR="$bold$white"
                ;;
            *nekopi*)
                source $HOME/config/bash/nekopi.bashrc
                PS1_HOSTCOLOR="$bold$brred"
                ;;
            *nekodroid*)
                source $HOME/config/bash/nekodroid.bashrc
                PS1_HOSTCOLOR="$bold$bryellow"
                ;;
            *)
                ;;
        esac
        ;;
    *)
        case $USER in
            *) echo "Nothin to do"
                ;;
        esac
        ;;
esac

if [ -e $HOME/config/dircolors/dircolors.256dark ]; then
    eval $(dircolors $HOME/config/dircolors/dircolors.256dark)
fi

if [ -e "${CONFDIR}/mc/solarized.ini" ]; then
    export MC_SKIN="${CONFDIR}/mc/solarized.ini"
fi

PS1="\[${PS1_USERCOLOR}\]\u\[${PS1_ATCOLOR}\]@\[${PS1_HOSTCOLOR}\]\h \[${PS1_PATHCOLOR}\]\W\[${PS1_DOLLARCOLOR}\] \$\[$reset\] "
#PS1='\[\e[1;32m\]\u\[\e[m\]\[\e[1;34m\]@\[\e[m\]\[\e[1;32m\]\h\[\e[m\] \[\e[1;34m\]\W\[\e[m\]\[\e[1;32m\]\$\[\e[m\] '
